<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<templates>
<template autoinsert="true" id="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Algoritmo" context="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Algoritmo" deleted="false" description="Template to create the basic structure of a Algorithm" enabled="true" name="Algorithm">/*
/*
* Algorithm: test
* Author:
* Date:
 */
 
Algorithm test

//Import module section
import
end_import

//Constant definition section (optional)
const


//Section type definition (optional)
type
	
	
//Subalgorithms definition section: functions and procedures	



//Start of algorithm (Required)
main	
var

initiation //Body main algorithm	

end_initiation

end_algorithm</template>
<template autoinsert="true" id="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Archivo" context="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Archivo" deleted="false" description="Template to create a archive" enabled="true" name="Archive">archive of ${typeArchive}: ${nameArchive}</template>
<template autoinsert="true" id="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Asignacion" context="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Asignacion" deleted="false" description="Template to create an assignment" enabled="true" name="Assignment">${nameVariable} &lt;- ${nameVariable2} </template>
<template autoinsert="true" id="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Declaracion" context="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Declaracion" deleted="false" description="Template to declare a variable" enabled="true" name="Variable Declaration">${nameType}: ${nameVariable}</template>
<template autoinsert="true" id="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.desde" context="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.desde" deleted="false" description="Template to define a for loop" enabled="true" name="For">for ${iterador} &lt;- ${InitialValue} to ${top} do
end_for</template>
<template autoinsert="true" id="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Devolver" context="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Devolver" deleted="false" description="Template to add return" enabled="true" name="Return">return ${nameVariable}</template>
<template autoinsert="true" id="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Enumerado" context="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Enumerado" deleted="false" description="Template to create a enumerate" enabled="true" name="Enumerate">${nameEnumerate} = {${valueEnumerate1}, ${valueEnumerate2}, ${valueEnumerate3}}</template>
<template autoinsert="true" id="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Funcion" context="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Funcion" deleted="false" description="Template for creating a function" enabled="true" name="Function">${integer} function ${nameFunction}(${I} ${integer}: ${a}) 
var
initiation
return ${a}
end_initiation
end_function
</template>
<template autoinsert="true" id="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Matriz" context="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Matriz" deleted="false" description="Template to create a matrix" enabled="true" name="Matrix">matrix [${dimension1}][${dimension2}] of ${typeMatrix}: ${nameMatriz}</template>
<template autoinsert="true" id="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.mientras" context="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.mientras" deleted="false" description="Template to define a while loop" enabled="true" name="While">while ${iterator} ${public:Enum('signo')} ${top} do
end_while</template>
<template autoinsert="true" id="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Modulo" context="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Modulo" deleted="false" description="Template to create the basic structure of a Module" enabled="true" name="Module">Module ${nameModule}

//Section to import modules
import
end_import

//Data export section of the module (visible to other modules)
export
const
	
type
	
var

end_export

//Module implementation section
implementation

const 

type

var

end_implementation

end_module</template>
<template autoinsert="true" id="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.ParametroFuncion" context="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.ParametroFuncion" deleted="false" description="Template to create a parameter of subprocess" enabled="true" name="Parameter">${I} ${integer}: ${nameParameter}</template>
<template autoinsert="true" id="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Procedimiento" context="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Procedimiento" deleted="false" description="Template to create a procedure" enabled="true" name="Procedure">procedure ${nameProcedure}(${I} ${integer}: a)
var
initiation
end_initiation
end_procedure</template>
<template autoinsert="true" id="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Registro" context="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Registro" deleted="false" description="Template to define a registry" enabled="true" name="Registry">registry: ${nameRegistry}
	${typeField}: ${nameField}
end_registry</template>
<template autoinsert="true" id="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.repetir" context="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.repetir" deleted="false" description="Template to define a repeat loop" enabled="true" name="Repeat">repeat
until ${conditionVariable} ${public:Enum('signo')} ${conditionValue}</template>
<template autoinsert="true" id="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.segun" context="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.segun" deleted="false" description="Template to define a structure according_to" enabled="true" name="According_to">according_to(${nameVariable}) do
	case 1: write("case 1")
	case 2: write("case 2")
	case ${n}: write("case n")
	in_another_case: write("another case")
end_according_to</template>
<template autoinsert="true" id="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.SiCompuesto" context="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Si" deleted="false" description="Template for defining a if selective structure with else" enabled="true" name="If Compound">if ${conditionVariable} ${public:Enum('signo')} ${conditionVariable2} then
else
end_if</template>
<template autoinsert="true" id="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.SiSimple" context="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Si" deleted="false" description="Template for defining a if selective structure" enabled="true" name="If Simple">if ${conditionVariable} ${public:Enum('signo')} ${conditionVariable2} then
end_if</template>
<template autoinsert="true" id="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Subrango" context="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Subrango" deleted="false" description="Template to create a subrange" enabled="true" name="Subrange">${nameSubrange} = ${limitLow}..${limitTop}</template>
<template autoinsert="true" id="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Vector" context="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Vector" deleted="false" description="Template to create a vector" enabled="true" name="Vector">vector [${dimension}] of ${typeVector}: ${nameVector}</template>
<template autoinsert="true" id="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.FuncionFicheroAbrir" context="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.FuncionFicheroAbrir" deleted="false" description="Template open function" enabled="true" name="Open">open(${fileVariable}, ${public:Enum('ModoApertura')}, ${StringVariable})</template>
<template autoinsert="true" id="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.FuncionFicheroCerrar" context="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.FuncionFicheroCerrar" deleted="false" description="Template close function" enabled="true" name="Close">close(${fileVariable})</template>
<template autoinsert="true" id="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Escribir" context="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Escribir" deleted="false" description="Template write function" enabled="true" name="Write">write("${stringMessage}", ${nameVariable})</template>
<template autoinsert="true" id="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Leer" context="vary.pseudocodigo.dsl.c.english.VaryGrammarEnglish.Leer" deleted="false" description="Template read function" enabled="true" name="Read">read(${nameVariale})</template>
</templates>