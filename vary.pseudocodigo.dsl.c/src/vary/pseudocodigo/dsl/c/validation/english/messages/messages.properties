ALGORITMO_REPETIDO = You can only declare one main algorithm.
MODULO_NOMBRE_REPETIDO = {0} module already defined.
SUBRANGO_LIMITES = The lower limit of the subrange may not be greater than the top.
TIPO_ENTERO = integer
VARIABLE_DESDE_ENTERO = The variable {0} used in the for loop must be of type integer.
VARIABLE_DESDE_NO_DEFINIDA = The variable {0} used in the for loop must have been previously declared.
SUBRANGO_LIMITES_ENUMERADO = The lower limit of the subrange may not be greater than the top in the reference enumerate.
SUBRANGO_ENUMERADO_NO_DEFINIDO = The lower and top limits of the subrange must belong to a enumerate previously defined.
CASO_REPETIDO = The case {0} of according_to structure has already been defined.
PARAMETRO_REPETIDO = A parameter already exists with the name {0} in {1}.
EXPRESION_TIPO_LOGICO = The expression must be of boolean type.
VARIABLE_REPETIDA_REGISTRO = A field already exists with the name {0} in registry {1}.
VARIABLE_TIPO_ARCHIVO = The variable {0} must belong to the type archive.
TIPO_CADENA = string
TIPO_CARACTER = character
VARIABLE_TIPO_CADENA = The variable {0} is not supported, it must be of string or character type.
ENTRADA_TIPO_CADENA = The input value is not supported, it must be of string or character type.
TIPO_NO_DEFINIDO = The type {0} must have been previously defined.
VARIABLE_REPETIDA = A variable already exists with the name {0} in {1}.
VARIABLE_REPETIDA_PRINCIPAL = There is already a variable named {0} in the same main program.
VARIABLE_NO_DECLARADA = The variable {0} must have been previously declared.
PARAMETROS_SEGUN = All according_to parameters must be the same type as the input parameter of it.
CONSTANTE_NO_DECLARADA = The constant {0} must have been previously declared.
CONSTANTE_REPETIDA = There is already defined constant with the name {0}.
TIPO_REPETIDO = There is already a type declared with the name {0}.
SUBPROCESO_REPETIDO = There is already a subprocess defined with the name {0} and the same number of parameters.
GLOBAL_REPETIDA = There is already a declared global variable with the name {0}.
FUNCION_NO_DECLARADA = The function {0} must have been previously declared.
FUNCION_NUMERO_PARAMETROS = The number of expected parameters is {0}.
TIPOS_LLAMADA = The types of variables do not coincide with the declaration of the head of the function: {0} ({1}), instead of {0} ({2}).
TIPO_REAL = real
PERDIDA_PRECISION = The return type is not appropriate, there may be loss of accuracy.
TIPOS_INCOMPATIBLES = The return type is not specified, the types are incompatible.
CAMPO_REGISTRO_NO_VALIDO = Field {0} does not belong to the registry of type {1} defined.
PERDIDA_PRECISION_REAL_ENTERO = Possible loss of accuracy when assigning a real to an integer.
ASIGNACION_INCOMPATIBLE = The type assignment is incompatible.
TIPO_LOGICO = boolean
NO_TIPO_VECTOR = The variable {0} does not belong to the vector type.
NO_TIPO_MATRIZ = The variable {0} does not belong to the matrix type.
NO_TIPO_REGISTRO = The variable {0} does not belong to the registry type.
QUICKFIX_VARIABLE_NO_DEFINIDA = Create undefined variable.
QUICKFIX_CONSTANTE_NO_DEFINIDA = Create undefined constant.
FUNCION_REPETIDA = The {0} function has already been defined in the module {1}.
PROCEDIMIENTO_REPETIDO = The {0} procedure has already been defined in the module {1}.
FUNCION_REPETIDA_IMPORTADA = Multiple definition of {0} function on imported modules: {1} and {2}.
PROCEDIMIENTO_REPETIDO_IMPORTADO = Multiple definition of {0} procedure on imported modules: {1} and {2}.
CICLO_IMPORTACION = Import cycle detected: {0} module also imports the module {1}.
CABECERA_FUNCION_NO_DEFINIDA = The function {0} must have been previously defined.
CABECERA_PROCEDIMIENTO_NO_DEFINIDO = The procedure {0} must have been previously defined.
CABECERA_REPETIDA_FUNCION = The function {0} has already been exported.
CABECERA_REPETIDA_PROCEDIMIENTO = The procedure {0} has already been exported.
CONSTANTE_EXPORTADA_REPETIDA = The constant {0} has already been exported.
TIPO_EXPORTADO_REPETIDO = The type {0} has already been exported.
VARIABLE_EXPORTADA_REPETIDA = The variable {0} has already been exported.
VARIABLE_REPETIDA_MODULO = The variable {0} already defined in the module {1}.
VARIABLE_REPETIDA_MODULO_IMPORTADA = Multiple definition of {0} variable on imported modules: {1} and {2}.
TIPO_REPETIDO_MODULO = The type {0} is already defined in the module {1}.
TIPO_REPETIDO_MODULO_IMPORTADO = Multiple definition of {0} type on imported modules: {1} and {2}.
CONSTANTE_REPETIDA_MODULO = The constant {0} is already defined in the module {1}.
CONSTANTE_REPETIDA_MODULO_IMPORTADA = Multiple definition of {0} constant on imported modules: {1} and {2}.
PARAMETRO_SALIDA = The function expects a variable as a parameter of type Output.
EXPORTA_VARIABLE_TIPO_INCORRECTO = The type of the variable {0} is incorrect, the required type is {1}.
TIPO_PASO_ENTRADA = I
TIPO_PASO_SALIDA = O
TIPO_PASO_ENTRADA_SALIDA = I/O
USO_VARIABLE_TIPO_S = The passage of the variable {0} is "output" type, therefore their value can not be used.
VERDADERO = true
FALSO = false
DIV_REAL = At least one of the operators of the operation "div" must be of type real.
DIV_ENTERA = All operators in the operation "/" must be of type integer.
MOD = All operators in the operation "mod" must be of type integer.