package vary.pseudocodigo.dsl.c.generator;

import org.eclipse.emf.common.util.EList;

import diagramapseudocodigo.Algoritmo;
import diagramapseudocodigo.And;
import diagramapseudocodigo.Archivo;
import diagramapseudocodigo.AsignacionCompleja;
import diagramapseudocodigo.AsignacionNormal;
import diagramapseudocodigo.CampoRegistro;
import diagramapseudocodigo.Caracter;
import diagramapseudocodigo.Caso;
import diagramapseudocodigo.Codigo;
import diagramapseudocodigo.Comentario;
import diagramapseudocodigo.Comparacion;
import diagramapseudocodigo.ConstCadena;
import diagramapseudocodigo.Constantes;
import diagramapseudocodigo.Declaracion;
import diagramapseudocodigo.DeclaracionPropia;
import diagramapseudocodigo.DeclaracionVariable;
import diagramapseudocodigo.Devolver;
import diagramapseudocodigo.Division;
import diagramapseudocodigo.Enumerado;
import diagramapseudocodigo.Escribir;
import diagramapseudocodigo.Funcion;
import diagramapseudocodigo.FuncionFicheroAbrir;
import diagramapseudocodigo.FuncionFicheroCerrar;
import diagramapseudocodigo.Igualdad;
import diagramapseudocodigo.Inicio;
import diagramapseudocodigo.Internas;
import diagramapseudocodigo.Leer;
import diagramapseudocodigo.LlamadaFuncion;
import diagramapseudocodigo.Matriz;
import diagramapseudocodigo.Modulo;
import diagramapseudocodigo.Multiplicacion;
import diagramapseudocodigo.Negacion;
import diagramapseudocodigo.Negativa;
import diagramapseudocodigo.NumeroDecimal;
import diagramapseudocodigo.NumeroEntero;
import diagramapseudocodigo.Operador;
import diagramapseudocodigo.Or;
import diagramapseudocodigo.ParametroFuncion;
import diagramapseudocodigo.Procedimiento;
import diagramapseudocodigo.Registro;
import diagramapseudocodigo.Resta;
import diagramapseudocodigo.Sentencias;
import diagramapseudocodigo.Si;
import diagramapseudocodigo.Sino;
import diagramapseudocodigo.Subproceso;
import diagramapseudocodigo.SubrangoEnumerado;
import diagramapseudocodigo.SubrangoNumerico;
import diagramapseudocodigo.Suma;
import diagramapseudocodigo.Tipo;
import diagramapseudocodigo.TipoComplejo;
import diagramapseudocodigo.TipoDefinido;
import diagramapseudocodigo.TipoExistente;
import diagramapseudocodigo.ValorBooleano;
import diagramapseudocodigo.ValorComplejo;
import diagramapseudocodigo.ValorMatriz;
import diagramapseudocodigo.ValorRegistro;
import diagramapseudocodigo.ValorVector;
import diagramapseudocodigo.VariableID;
import diagramapseudocodigo.Vector;
import diagramapseudocodigo.desde;
import diagramapseudocodigo.mientras;
import diagramapseudocodigo.operacion;
import diagramapseudocodigo.repetir;
import diagramapseudocodigo.segun;
import diagramapseudocodigo.valor;

public interface VaryGeneratorInterface {
	CharSequence generate(Codigo codigo);
	CharSequence generate(Modulo modulo);
	CharSequence generate(Algoritmo algoritmo);
	CharSequence generate(TipoComplejo complejo);
	CharSequence generate(Tipo tipo);
	CharSequence generate(TipoExistente tipo);
	CharSequence generate(TipoDefinido tipo);
	CharSequence generate(Comentario comentario);
	CharSequence generate(Constantes constante);
	CharSequence generate(Vector vector);
	CharSequence generate(Matriz matriz);
	CharSequence generate(Registro registro);
	CharSequence generate(Archivo archivo);
	CharSequence generate(Enumerado enumerado);
	CharSequence generate(SubrangoNumerico subrango);
	CharSequence generate(SubrangoEnumerado subrango);
	CharSequence generate(FuncionFicheroAbrir funcion);
	CharSequence generate(FuncionFicheroCerrar funcion);
	CharSequence generate(Inicio inicio);
	CharSequence generate(Subproceso subproceso);
	CharSequence generate(Funcion funcion);
	CharSequence generate(Procedimiento procedimiento);
	CharSequence generate(EList<ParametroFuncion> parametros);
	CharSequence generate(Sentencias sentencias);
	CharSequence generate(Declaracion declaracion);
	CharSequence generate(DeclaracionVariable declaracion);
	CharSequence generate(DeclaracionPropia declaracion);
	CharSequence generate(AsignacionNormal asignacion);
	CharSequence generate(AsignacionCompleja asignacion);
	CharSequence generate(ValorComplejo valor);
	CharSequence generate(ValorRegistro valor);
	CharSequence generate(CampoRegistro campo);
	CharSequence generate(ValorVector valor);
	CharSequence generate(ValorMatriz valor);
	CharSequence generate(valor valor);
	CharSequence generate(NumeroEntero entero);
	CharSequence generate(NumeroDecimal decimal);
	CharSequence generate(ValorBooleano booleano);
	CharSequence generate(ConstCadena cadena);
	CharSequence generate(Caracter caracter);
	CharSequence generate(VariableID variable);
	CharSequence generate(Leer leer);
	CharSequence generate(Escribir escribir);
	CharSequence generate(Internas internas, boolean sentencia);
	CharSequence generate(LlamadaFuncion llamada, boolean condicion);
	CharSequence generate(Operador operador);
	CharSequence generate(operacion operacion);
	CharSequence generate(Suma suma);
	CharSequence generate(Resta resta);
	CharSequence generate(Multiplicacion multiplicacion);
	CharSequence generate(Division division);
	CharSequence generate(Or or);
	CharSequence generate(And and);
	CharSequence generate(Comparacion comparacion);
	CharSequence generate(Igualdad igualdad);
	CharSequence generate(Si si);
	CharSequence generate(Caso caso);
	CharSequence generate(segun segun);
	CharSequence generate(Devolver devolver);
	CharSequence generate(Sino sino);
	CharSequence generate(mientras mientras);
	CharSequence generate(desde desde);
	CharSequence generate(repetir repetir);
}
