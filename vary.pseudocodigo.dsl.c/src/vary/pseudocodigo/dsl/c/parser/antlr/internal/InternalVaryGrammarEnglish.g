/*
* generated by Xtext
*/
grammar InternalVaryGrammar;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package vary.pseudocodigo.dsl.c.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package vary.pseudocodigo.dsl.c.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import vary.pseudocodigo.dsl.c.services.VaryGrammarGrammarAccess;

}

@parser::members {

 	private VaryGrammarGrammarAccess grammarAccess;
 	
    public InternalVaryGrammarParser(TokenStream input, VaryGrammarGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Codigo";	
   	}
   	
   	@Override
   	protected VaryGrammarGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleCodigo
entryRuleCodigo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCodigoRule()); }
	 iv_ruleCodigo=ruleCodigo 
	 { $current=$iv_ruleCodigo.current; } 
	 EOF 
;

// Rule Codigo
ruleCodigo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Algorithm' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCodigoAccess().getAlgorithmKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getCodigoAccess().getEStringParserRuleCall_1()); 
    }
ruleEString
    { 
        afterParserOrEnumRuleCall();
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCodigoAccess().getComentariosComentarioParserRuleCall_2_0_0()); 
	    }
		lv_comentarios_2_0=ruleComentario		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodigoRule());
	        }
       		add(
       			$current, 
       			"comentarios",
        		lv_comentarios_2_0, 
        		"Comentario");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCodigoAccess().getComentariosComentarioParserRuleCall_2_1_0()); 
	    }
		lv_comentarios_3_0=ruleComentario		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodigoRule());
	        }
       		add(
       			$current, 
       			"comentarios",
        		lv_comentarios_3_0, 
        		"Comentario");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(	otherlv_4='const' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCodigoAccess().getConstKeyword_3_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCodigoAccess().getConstantesConstantesParserRuleCall_3_1_0_0()); 
	    }
		lv_constantes_5_0=ruleConstantes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodigoRule());
	        }
       		add(
       			$current, 
       			"constantes",
        		lv_constantes_5_0, 
        		"Constantes");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCodigoAccess().getConstantesConstantesParserRuleCall_3_1_1_0()); 
	    }
		lv_constantes_6_0=ruleConstantes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodigoRule());
	        }
       		add(
       			$current, 
       			"constantes",
        		lv_constantes_6_0, 
        		"Constantes");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?)?(	otherlv_7='type' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCodigoAccess().getTypeKeyword_4_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCodigoAccess().getTipocomplejoTipoComplejoParserRuleCall_4_1_0_0()); 
	    }
		lv_tipocomplejo_8_0=ruleTipoComplejo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodigoRule());
	        }
       		add(
       			$current, 
       			"tipocomplejo",
        		lv_tipocomplejo_8_0, 
        		"TipoComplejo");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCodigoAccess().getTipocomplejoTipoComplejoParserRuleCall_4_1_1_0()); 
	    }
		lv_tipocomplejo_9_0=ruleTipoComplejo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodigoRule());
	        }
       		add(
       			$current, 
       			"tipocomplejo",
        		lv_tipocomplejo_9_0, 
        		"TipoComplejo");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?)?(	otherlv_10='var' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getCodigoAccess().getVarKeyword_5_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCodigoAccess().getGlobalDeclaracionParserRuleCall_5_1_0_0()); 
	    }
		lv_global_11_0=ruleDeclaracion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodigoRule());
	        }
       		add(
       			$current, 
       			"global",
        		lv_global_11_0, 
        		"Declaracion");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCodigoAccess().getGlobalDeclaracionParserRuleCall_5_1_1_0()); 
	    }
		lv_global_12_0=ruleDeclaracion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodigoRule());
	        }
       		add(
       			$current, 
       			"global",
        		lv_global_12_0, 
        		"Declaracion");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?)?((
(
		{ 
	        newCompositeNode(grammarAccess.getCodigoAccess().getFuncionSubprocesoParserRuleCall_6_0_0()); 
	    }
		lv_funcion_13_0=ruleSubproceso		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodigoRule());
	        }
       		add(
       			$current, 
       			"funcion",
        		lv_funcion_13_0, 
        		"Subproceso");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCodigoAccess().getFuncionSubprocesoParserRuleCall_6_1_0()); 
	    }
		lv_funcion_14_0=ruleSubproceso		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodigoRule());
	        }
       		add(
       			$current, 
       			"funcion",
        		lv_funcion_14_0, 
        		"Subproceso");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCodigoAccess().getTieneInicioParserRuleCall_7_0()); 
	    }
		lv_tiene_15_0=ruleInicio		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodigoRule());
	        }
       		set(
       			$current, 
       			"tiene",
        		lv_tiene_15_0, 
        		"Inicio");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_16='end_algorithm' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getCodigoAccess().getEnd_algorithmKeyword_8());
    }
)
;





// Entry rule entryRuleTipoComplejo
entryRuleTipoComplejo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTipoComplejoRule()); }
	 iv_ruleTipoComplejo=ruleTipoComplejo 
	 { $current=$iv_ruleTipoComplejo.current; } 
	 EOF 
;

// Rule TipoComplejo
ruleTipoComplejo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTipoComplejoAccess().getVectorParserRuleCall_0()); 
    }
    this_Vector_0=ruleVector
    { 
        $current = $this_Vector_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTipoComplejoAccess().getMatrizParserRuleCall_1()); 
    }
    this_Matriz_1=ruleMatriz
    { 
        $current = $this_Matriz_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTipoComplejoAccess().getRegistroParserRuleCall_2()); 
    }
    this_Registro_2=ruleRegistro
    { 
        $current = $this_Registro_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTipoComplejoAccess().getArchivoParserRuleCall_3()); 
    }
    this_Archivo_3=ruleArchivo
    { 
        $current = $this_Archivo_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTipoComplejoAccess().getEnumeradoParserRuleCall_4()); 
    }
    this_Enumerado_4=ruleEnumerado
    { 
        $current = $this_Enumerado_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTipoComplejoAccess().getSubrangoParserRuleCall_5()); 
    }
    this_Subrango_5=ruleSubrango
    { 
        $current = $this_Subrango_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSubproceso
entryRuleSubproceso returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubprocesoRule()); }
	 iv_ruleSubproceso=ruleSubproceso 
	 { $current=$iv_ruleSubproceso.current; } 
	 EOF 
;

// Rule Subproceso
ruleSubproceso returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSubprocesoAccess().getFuncionParserRuleCall_0()); 
    }
    this_Funcion_0=ruleFuncion
    { 
        $current = $this_Funcion_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSubprocesoAccess().getProcedimientoParserRuleCall_1()); 
    }
    this_Procedimiento_1=ruleProcedimiento
    { 
        $current = $this_Procedimiento_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleComentario
entryRuleComentario returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComentarioRule()); }
	 iv_ruleComentario=ruleComentario 
	 { $current=$iv_ruleComentario.current; } 
	 EOF 
;

// Rule Comentario
ruleComentario returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getComentarioAccess().getComentarioAction_0(),
            $current);
    }
)this_SL_COMMENT_1=RULE_SL_COMMENT
    { 
    newLeafNode(this_SL_COMMENT_1, grammarAccess.getComentarioAccess().getSL_COMMENTTerminalRuleCall_1()); 
    }
(
(
		lv_mensaje_2_0=RULE_COMENT
		{
			newLeafNode(lv_mensaje_2_0, grammarAccess.getComentarioAccess().getMensajeCOMENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getComentarioRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"mensaje",
        		lv_mensaje_2_0, 
        		"COMENT");
	    }

)
))
;





// Entry rule entryRuleSentencias
entryRuleSentencias returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSentenciasRule()); }
	 iv_ruleSentencias=ruleSentencias 
	 { $current=$iv_ruleSentencias.current; } 
	 EOF 
;

// Rule Sentencias
ruleSentencias returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSentenciasAccess().getEscribirParserRuleCall_0()); 
    }
    this_Escribir_0=ruleEscribir
    { 
        $current = $this_Escribir_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenciasAccess().getLeerParserRuleCall_1()); 
    }
    this_Leer_1=ruleLeer
    { 
        $current = $this_Leer_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenciasAccess().getBloqueParserRuleCall_2()); 
    }
    this_Bloque_2=ruleBloque
    { 
        $current = $this_Bloque_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenciasAccess().getFuncionFicheroAbrirParserRuleCall_3()); 
    }
    this_FuncionFicheroAbrir_3=ruleFuncionFicheroAbrir
    { 
        $current = $this_FuncionFicheroAbrir_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenciasAccess().getFuncionFicheroCerrarParserRuleCall_4()); 
    }
    this_FuncionFicheroCerrar_4=ruleFuncionFicheroCerrar
    { 
        $current = $this_FuncionFicheroCerrar_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenciasAccess().getAsignacionParserRuleCall_5()); 
    }
    this_Asignacion_5=ruleAsignacion
    { 
        $current = $this_Asignacion_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenciasAccess().getFuncionesParserRuleCall_6()); 
    }
    this_Funciones_6=ruleFunciones
    { 
        $current = $this_Funciones_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBloque
entryRuleBloque returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBloqueRule()); }
	 iv_ruleBloque=ruleBloque 
	 { $current=$iv_ruleBloque.current; } 
	 EOF 
;

// Rule Bloque
ruleBloque returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBloqueAccess().getSiParserRuleCall_0()); 
    }
    this_Si_0=ruleSi
    { 
        $current = $this_Si_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBloqueAccess().getMientrasParserRuleCall_1()); 
    }
    this_mientras_1=rulemientras
    { 
        $current = $this_mientras_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBloqueAccess().getRepetirParserRuleCall_2()); 
    }
    this_repetir_2=rulerepetir
    { 
        $current = $this_repetir_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBloqueAccess().getDesdeParserRuleCall_3()); 
    }
    this_desde_3=ruledesde
    { 
        $current = $this_desde_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBloqueAccess().getSegunParserRuleCall_4()); 
    }
    this_segun_4=rulesegun
    { 
        $current = $this_segun_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDeclaracion
entryRuleDeclaracion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclaracionRule()); }
	 iv_ruleDeclaracion=ruleDeclaracion 
	 { $current=$iv_ruleDeclaracion.current; } 
	 EOF 
;

// Rule Declaracion
ruleDeclaracion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDeclaracionAccess().getDeclaracionVariableParserRuleCall_0()); 
    }
    this_DeclaracionVariable_0=ruleDeclaracionVariable
    { 
        $current = $this_DeclaracionVariable_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDeclaracionAccess().getDeclaracionPropiaParserRuleCall_1()); 
    }
    this_DeclaracionPropia_1=ruleDeclaracionPropia
    { 
        $current = $this_DeclaracionPropia_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFuncionFicheroAbrir
entryRuleFuncionFicheroAbrir returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFuncionFicheroAbrirRule()); }
	 iv_ruleFuncionFicheroAbrir=ruleFuncionFicheroAbrir 
	 { $current=$iv_ruleFuncionFicheroAbrir.current; } 
	 EOF 
;

// Rule FuncionFicheroAbrir
ruleFuncionFicheroAbrir returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='open' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFuncionFicheroAbrirAccess().getOpenKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFuncionFicheroAbrirAccess().getLeftParenthesisKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionFicheroAbrirAccess().getVariablePrimariaParserRuleCall_2_0_0()); 
	    }
		lv_variable_2_0=rulePrimaria		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionFicheroAbrirRule());
	        }
       		add(
       			$current, 
       			"variable",
        		lv_variable_2_0, 
        		"Primaria");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFuncionFicheroAbrirAccess().getCommaKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionFicheroAbrirAccess().getModoModoAperturaParserRuleCall_2_2_0()); 
	    }
		lv_modo_4_0=ruleModoApertura		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionFicheroAbrirRule());
	        }
       		set(
       			$current, 
       			"modo",
        		lv_modo_4_0, 
        		"ModoApertura");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFuncionFicheroAbrirAccess().getCommaKeyword_2_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionFicheroAbrirAccess().getVariablePrimariaParserRuleCall_2_4_0()); 
	    }
		lv_variable_6_0=rulePrimaria		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionFicheroAbrirRule());
	        }
       		add(
       			$current, 
       			"variable",
        		lv_variable_6_0, 
        		"Primaria");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFuncionFicheroAbrirAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleFuncionFicheroCerrar
entryRuleFuncionFicheroCerrar returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFuncionFicheroCerrarRule()); }
	 iv_ruleFuncionFicheroCerrar=ruleFuncionFicheroCerrar 
	 { $current=$iv_ruleFuncionFicheroCerrar.current; } 
	 EOF 
;

// Rule FuncionFicheroCerrar
ruleFuncionFicheroCerrar returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='close' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFuncionFicheroCerrarAccess().getCloseKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFuncionFicheroCerrarAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionFicheroCerrarAccess().getVariablePrimariaParserRuleCall_2_0()); 
	    }
		lv_variable_2_0=rulePrimaria		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionFicheroCerrarRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_2_0, 
        		"Primaria");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFuncionFicheroCerrarAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleModoApertura
entryRuleModoApertura returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getModoAperturaRule()); } 
	 iv_ruleModoApertura=ruleModoApertura 
	 { $current=$iv_ruleModoApertura.current.getText(); }  
	 EOF 
;

// Rule ModoApertura
ruleModoApertura returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='writing' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getModoAperturaAccess().getWritingKeyword_0()); 
    }

    |
	kw='reading' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getModoAperturaAccess().getReadingKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleNombreInterna
entryRuleNombreInterna returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNombreInternaRule()); } 
	 iv_ruleNombreInterna=ruleNombreInterna 
	 { $current=$iv_ruleNombreInterna.current.getText(); }  
	 EOF 
;

// Rule NombreInterna
ruleNombreInterna returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='cos' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNombreInternaAccess().getCosKeyword_0()); 
    }

    |
	kw='square' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNombreInternaAccess().getSquareKeyword_1()); 
    }

    |
	kw='exp' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNombreInternaAccess().getExpKeyword_2()); 
    }

    |
	kw='ln' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNombreInternaAccess().getLnKeyword_3()); 
    }

    |
	kw='log' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNombreInternaAccess().getLogKeyword_4()); 
    }

    |
	kw='sen' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNombreInternaAccess().getSenKeyword_5()); 
    }

    |
	kw='sqrt' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNombreInternaAccess().getSqrtKeyword_6()); 
    }

    |
	kw='length' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNombreInternaAccess().getLengthKeyword_7()); 
    }

    |
	kw='concatena' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNombreInternaAccess().getConcatenaKeyword_8()); 
    }
)
    ;





// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEIntRule()); } 
	 iv_ruleEInt=ruleEInt 
	 { $current=$iv_ruleEInt.current.getText(); }  
	 EOF 
;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getEIntAccess().getINTTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleEFloat
entryRuleEFloat returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEFloatRule()); } 
	 iv_ruleEFloat=ruleEFloat 
	 { $current=$iv_ruleEFloat.current.getText(); }  
	 EOF 
;

// Rule EFloat
ruleEFloat returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_0()); 
    }

	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEFloatAccess().getFullStopKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_2()); 
    }
((
	kw='E' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEFloatAccess().getEKeyword_3_0_0()); 
    }

    |
	kw='e' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEFloatAccess().getEKeyword_3_0_1()); 
    }
)(
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEFloatAccess().getPlusSignKeyword_3_1_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEFloatAccess().getHyphenMinusKeyword_3_1_1()); 
    }
)?    this_INT_7=RULE_INT    {
		$current.merge(this_INT_7);
    }

    { 
    newLeafNode(this_INT_7, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_3_2()); 
    }
)?)
    ;





// Entry rule entryRuleCampoRegistro
entryRuleCampoRegistro returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCampoRegistroRule()); }
	 iv_ruleCampoRegistro=ruleCampoRegistro 
	 { $current=$iv_ruleCampoRegistro.current; } 
	 EOF 
;

// Rule CampoRegistro
ruleCampoRegistro returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getCampoRegistroAccess().getNombre_campoEStringParserRuleCall_0()); 
	    }
		lv_nombre_campo_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCampoRegistroRule());
	        }
       		set(
       			$current, 
       			"nombre_campo",
        		lv_nombre_campo_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleTipo
entryRuleTipo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTipoRule()); }
	 iv_ruleTipo=ruleTipo 
	 { $current=$iv_ruleTipo.current; } 
	 EOF 
;

// Rule Tipo
ruleTipo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTipoAccess().getTipoDefinidoParserRuleCall_0()); 
    }
    this_TipoDefinido_0=ruleTipoDefinido
    { 
        $current = $this_TipoDefinido_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTipoAccess().getTipoExistenteParserRuleCall_1()); 
    }
    this_TipoExistente_1=ruleTipoExistente
    { 
        $current = $this_TipoExistente_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTipoDefinido
entryRuleTipoDefinido returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTipoDefinidoRule()); }
	 iv_ruleTipoDefinido=ruleTipoDefinido 
	 { $current=$iv_ruleTipoDefinido.current; } 
	 EOF 
;

// Rule TipoDefinido
ruleTipoDefinido returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getTipoDefinidoAccess().getTipoEStringParserRuleCall_0()); 
	    }
		lv_tipo_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTipoDefinidoRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleTipoExistente
entryRuleTipoExistente returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTipoExistenteRule()); }
	 iv_ruleTipoExistente=ruleTipoExistente 
	 { $current=$iv_ruleTipoExistente.current; } 
	 EOF 
;

// Rule TipoExistente
ruleTipoExistente returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getTipoExistenteAccess().getTipoTipoVariableParserRuleCall_0()); 
	    }
		lv_tipo_0_0=ruleTipoVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTipoExistenteRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_0_0, 
        		"TipoVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleConstantes
entryRuleConstantes returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantesRule()); }
	 iv_ruleConstantes=ruleConstantes 
	 { $current=$iv_ruleConstantes.current; } 
	 EOF 
;

// Rule Constantes
ruleConstantes returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getConstantesAccess().getVariableVariableParserRuleCall_0_0()); 
	    }
		lv_variable_0_0=ruleVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantesRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_0_0, 
        		"Variable");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConstantesAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantesAccess().getValorPrimariaParserRuleCall_2_0()); 
	    }
		lv_valor_2_0=rulePrimaria		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantesRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_2_0, 
        		"Primaria");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVector
entryRuleVector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVectorRule()); }
	 iv_ruleVector=ruleVector 
	 { $current=$iv_ruleVector.current; } 
	 EOF 
;

// Rule Vector
ruleVector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='vector' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVectorAccess().getVectorKeyword_0());
    }
	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVectorAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVectorAccess().getValorPrimariaParserRuleCall_2_0()); 
	    }
		lv_valor_2_0=rulePrimaria		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVectorRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_2_0, 
        		"Primaria");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVectorAccess().getRightSquareBracketKeyword_3());
    }
	otherlv_4='of' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVectorAccess().getOfKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVectorAccess().getTipoTipoParserRuleCall_5_0()); 
	    }
		lv_tipo_5_0=ruleTipo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVectorRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_5_0, 
        		"Tipo");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=': ' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getVectorAccess().getColonSpaceKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVectorAccess().getNombreEStringParserRuleCall_7_0()); 
	    }
		lv_nombre_7_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVectorRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_7_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMatriz
entryRuleMatriz returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMatrizRule()); }
	 iv_ruleMatriz=ruleMatriz 
	 { $current=$iv_ruleMatriz.current; } 
	 EOF 
;

// Rule Matriz
ruleMatriz returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='matrix' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMatrizAccess().getMatrixKeyword_0());
    }
	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMatrizAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMatrizAccess().getValorPrimariaParserRuleCall_2_0()); 
	    }
		lv_valor_2_0=rulePrimaria		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatrizRule());
	        }
       		add(
       			$current, 
       			"valor",
        		lv_valor_2_0, 
        		"Primaria");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='][' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMatrizAccess().getRightSquareBracketLeftSquareBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMatrizAccess().getValorPrimariaParserRuleCall_4_0()); 
	    }
		lv_valor_4_0=rulePrimaria		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatrizRule());
	        }
       		add(
       			$current, 
       			"valor",
        		lv_valor_4_0, 
        		"Primaria");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMatrizAccess().getRightSquareBracketKeyword_5());
    }
	otherlv_6='of' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMatrizAccess().getOfKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMatrizAccess().getTipoTipoParserRuleCall_7_0()); 
	    }
		lv_tipo_7_0=ruleTipo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatrizRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_7_0, 
        		"Tipo");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=': ' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMatrizAccess().getColonSpaceKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMatrizAccess().getNombreEStringParserRuleCall_9_0()); 
	    }
		lv_nombre_9_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatrizRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_9_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRegistro
entryRuleRegistro returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRegistroRule()); }
	 iv_ruleRegistro=ruleRegistro 
	 { $current=$iv_ruleRegistro.current; } 
	 EOF 
;

// Rule Registro
ruleRegistro returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='registry:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRegistroAccess().getRegistryKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRegistroAccess().getNombreEStringParserRuleCall_1_0()); 
	    }
		lv_nombre_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRegistroRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getRegistroAccess().getVariableDeclaracionParserRuleCall_2_0_0()); 
	    }
		lv_variable_2_0=ruleDeclaracion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRegistroRule());
	        }
       		add(
       			$current, 
       			"variable",
        		lv_variable_2_0, 
        		"Declaracion");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRegistroAccess().getVariableDeclaracionParserRuleCall_2_1_0()); 
	    }
		lv_variable_3_0=ruleDeclaracion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRegistroRule());
	        }
       		add(
       			$current, 
       			"variable",
        		lv_variable_3_0, 
        		"Declaracion");
	        afterParserOrEnumRuleCall();
	    }

)
)*)	otherlv_4='end_registry' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRegistroAccess().getEnd_registryKeyword_3());
    }
)
;





// Entry rule entryRuleArchivo
entryRuleArchivo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArchivoRule()); }
	 iv_ruleArchivo=ruleArchivo 
	 { $current=$iv_ruleArchivo.current; } 
	 EOF 
;

// Rule Archivo
ruleArchivo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='archive of ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getArchivoAccess().getArchiveOfKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArchivoAccess().getTipoTipoParserRuleCall_1_0()); 
	    }
		lv_tipo_1_0=ruleTipo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArchivoRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_1_0, 
        		"Tipo");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=': ' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getArchivoAccess().getColonSpaceKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArchivoAccess().getNombreEStringParserRuleCall_3_0()); 
	    }
		lv_nombre_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArchivoRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEnumerado
entryRuleEnumerado returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumeradoRule()); }
	 iv_ruleEnumerado=ruleEnumerado 
	 { $current=$iv_ruleEnumerado.current; } 
	 EOF 
;

// Rule Enumerado
ruleEnumerado returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getEnumeradoAccess().getNombreEStringParserRuleCall_0_0()); 
	    }
		lv_nombre_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumeradoRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnumeradoAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnumeradoAccess().getLeftCurlyBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getEnumeradoAccess().getValorPrimariaParserRuleCall_3_0_0()); 
	    }
		lv_valor_3_0=rulePrimaria		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumeradoRule());
	        }
       		add(
       			$current, 
       			"valor",
        		lv_valor_3_0, 
        		"Primaria");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEnumeradoAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumeradoAccess().getValorPrimariaParserRuleCall_3_1_1_0()); 
	    }
		lv_valor_5_0=rulePrimaria		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumeradoRule());
	        }
       		add(
       			$current, 
       			"valor",
        		lv_valor_5_0, 
        		"Primaria");
	        afterParserOrEnumRuleCall();
	    }

)
))*)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEnumeradoAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleSubrango
entryRuleSubrango returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubrangoRule()); }
	 iv_ruleSubrango=ruleSubrango 
	 { $current=$iv_ruleSubrango.current; } 
	 EOF 
;

// Rule Subrango
ruleSubrango returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSubrangoAccess().getSubrangoNumericoParserRuleCall_0()); 
    }
    this_SubrangoNumerico_0=ruleSubrangoNumerico
    { 
        $current = $this_SubrangoNumerico_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSubrangoAccess().getSubrangoEnumeradoParserRuleCall_1()); 
    }
    this_SubrangoEnumerado_1=ruleSubrangoEnumerado
    { 
        $current = $this_SubrangoEnumerado_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSubrangoNumerico
entryRuleSubrangoNumerico returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubrangoNumericoRule()); }
	 iv_ruleSubrangoNumerico=ruleSubrangoNumerico 
	 { $current=$iv_ruleSubrangoNumerico.current; } 
	 EOF 
;

// Rule SubrangoNumerico
ruleSubrangoNumerico returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSubrangoNumericoAccess().getNombreEStringParserRuleCall_0_0()); 
	    }
		lv_nombre_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubrangoNumericoRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSubrangoNumericoAccess().getEqualsSignKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSubrangoNumericoAccess().getLimite_infEIntParserRuleCall_2_0_0()); 
	    }
		lv_limite_inf_2_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubrangoNumericoRule());
	        }
       		set(
       			$current, 
       			"limite_inf",
        		lv_limite_inf_2_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='..' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSubrangoNumericoAccess().getFullStopFullStopKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubrangoNumericoAccess().getLimite_supEIntParserRuleCall_2_2_0()); 
	    }
		lv_limite_sup_4_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubrangoNumericoRule());
	        }
       		set(
       			$current, 
       			"limite_sup",
        		lv_limite_sup_4_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleSubrangoEnumerado
entryRuleSubrangoEnumerado returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubrangoEnumeradoRule()); }
	 iv_ruleSubrangoEnumerado=ruleSubrangoEnumerado 
	 { $current=$iv_ruleSubrangoEnumerado.current; } 
	 EOF 
;

// Rule SubrangoEnumerado
ruleSubrangoEnumerado returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSubrangoEnumeradoAccess().getNombreEStringParserRuleCall_0_0()); 
	    }
		lv_nombre_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubrangoEnumeradoRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSubrangoEnumeradoAccess().getEqualsSignKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSubrangoEnumeradoAccess().getLimite_infEStringParserRuleCall_2_0_0()); 
	    }
		lv_limite_inf_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubrangoEnumeradoRule());
	        }
       		set(
       			$current, 
       			"limite_inf",
        		lv_limite_inf_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='..' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSubrangoEnumeradoAccess().getFullStopFullStopKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubrangoEnumeradoAccess().getLimite_supEStringParserRuleCall_2_2_0()); 
	    }
		lv_limite_sup_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubrangoEnumeradoRule());
	        }
       		set(
       			$current, 
       			"limite_sup",
        		lv_limite_sup_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleInicio
entryRuleInicio returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInicioRule()); }
	 iv_ruleInicio=ruleInicio 
	 { $current=$iv_ruleInicio.current; } 
	 EOF 
;

// Rule Inicio
ruleInicio returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='main' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInicioAccess().getMainKeyword_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getInicioAccess().getInicioAction_1(),
            $current);
    }
)	otherlv_2='var' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInicioAccess().getVarKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getInicioAccess().getDeclaracionDeclaracionParserRuleCall_3_0_0()); 
	    }
		lv_declaracion_3_0=ruleDeclaracion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInicioRule());
	        }
       		add(
       			$current, 
       			"declaracion",
        		lv_declaracion_3_0, 
        		"Declaracion");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInicioAccess().getDeclaracionDeclaracionParserRuleCall_3_1_0()); 
	    }
		lv_declaracion_4_0=ruleDeclaracion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInicioRule());
	        }
       		add(
       			$current, 
       			"declaracion",
        		lv_declaracion_4_0, 
        		"Declaracion");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_5='initiation' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInicioAccess().getInitiationKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getInicioAccess().getTieneSentenciasParserRuleCall_5_0_0()); 
	    }
		lv_tiene_6_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInicioRule());
	        }
       		add(
       			$current, 
       			"tiene",
        		lv_tiene_6_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInicioAccess().getTieneSentenciasParserRuleCall_5_1_0()); 
	    }
		lv_tiene_7_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInicioRule());
	        }
       		add(
       			$current, 
       			"tiene",
        		lv_tiene_7_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_8='end_initiation' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInicioAccess().getEnd_initiationKeyword_6());
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleDeclaracionVariable
entryRuleDeclaracionVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclaracionVariableRule()); }
	 iv_ruleDeclaracionVariable=ruleDeclaracionVariable 
	 { $current=$iv_ruleDeclaracionVariable.current; } 
	 EOF 
;

// Rule DeclaracionVariable
ruleDeclaracionVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDeclaracionVariableAccess().getTipoTipoVariableParserRuleCall_0_0()); 
	    }
		lv_tipo_0_0=ruleTipoVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclaracionVariableRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_0_0, 
        		"TipoVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=': ' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeclaracionVariableAccess().getColonSpaceKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclaracionVariableAccess().getVariableVariableParserRuleCall_2_0()); 
	    }
		lv_variable_2_0=ruleVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclaracionVariableRule());
	        }
       		add(
       			$current, 
       			"variable",
        		lv_variable_2_0, 
        		"Variable");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDeclaracionVariableAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclaracionVariableAccess().getVariableVariableParserRuleCall_3_1_0()); 
	    }
		lv_variable_4_0=ruleVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclaracionVariableRule());
	        }
       		add(
       			$current, 
       			"variable",
        		lv_variable_4_0, 
        		"Variable");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleDeclaracionPropia
entryRuleDeclaracionPropia returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclaracionPropiaRule()); }
	 iv_ruleDeclaracionPropia=ruleDeclaracionPropia 
	 { $current=$iv_ruleDeclaracionPropia.current; } 
	 EOF 
;

// Rule DeclaracionPropia
ruleDeclaracionPropia returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDeclaracionPropiaAccess().getTipoEStringParserRuleCall_0_0()); 
	    }
		lv_tipo_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclaracionPropiaRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=': ' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeclaracionPropiaAccess().getColonSpaceKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclaracionPropiaAccess().getVariableVariableParserRuleCall_2_0()); 
	    }
		lv_variable_2_0=ruleVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclaracionPropiaRule());
	        }
       		add(
       			$current, 
       			"variable",
        		lv_variable_2_0, 
        		"Variable");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDeclaracionPropiaAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclaracionPropiaAccess().getVariableVariableParserRuleCall_3_1_0()); 
	    }
		lv_variable_4_0=ruleVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclaracionPropiaRule());
	        }
       		add(
       			$current, 
       			"variable",
        		lv_variable_4_0, 
        		"Variable");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAsignacion
entryRuleAsignacion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAsignacionRule()); }
	 iv_ruleAsignacion=ruleAsignacion 
	 { $current=$iv_ruleAsignacion.current; } 
	 EOF 
;

// Rule Asignacion
ruleAsignacion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAsignacionAccess().getAsignacionNormalParserRuleCall_0()); 
    }
    this_AsignacionNormal_0=ruleAsignacionNormal
    { 
        $current = $this_AsignacionNormal_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAsignacionAccess().getAsignacionComplejaParserRuleCall_1()); 
    }
    this_AsignacionCompleja_1=ruleAsignacionCompleja
    { 
        $current = $this_AsignacionCompleja_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAsignacionNormal
entryRuleAsignacionNormal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAsignacionNormalRule()); }
	 iv_ruleAsignacionNormal=ruleAsignacionNormal 
	 { $current=$iv_ruleAsignacionNormal.current; } 
	 EOF 
;

// Rule AsignacionNormal
ruleAsignacionNormal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAsignacionNormalAccess().getValor_asignacionEStringParserRuleCall_0_0()); 
	    }
		lv_valor_asignacion_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAsignacionNormalRule());
	        }
       		set(
       			$current, 
       			"valor_asignacion",
        		lv_valor_asignacion_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAsignacionNormalAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAsignacionNormalAccess().getOperadorOperacionParserRuleCall_2_0()); 
	    }
		lv_operador_2_0=ruleoperacion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAsignacionNormalRule());
	        }
       		set(
       			$current, 
       			"operador",
        		lv_operador_2_0, 
        		"operacion");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAsignacionCompleja
entryRuleAsignacionCompleja returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAsignacionComplejaRule()); }
	 iv_ruleAsignacionCompleja=ruleAsignacionCompleja 
	 { $current=$iv_ruleAsignacionCompleja.current; } 
	 EOF 
;

// Rule AsignacionCompleja
ruleAsignacionCompleja returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAsignacionComplejaAccess().getValor_asignacionVariablesComplejasParserRuleCall_0_0()); 
	    }
		lv_valor_asignacion_0_0=ruleVariablesComplejas		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAsignacionComplejaRule());
	        }
       		set(
       			$current, 
       			"valor_asignacion",
        		lv_valor_asignacion_0_0, 
        		"VariablesComplejas");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAsignacionComplejaAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAsignacionComplejaAccess().getOperadorOperacionParserRuleCall_2_0()); 
	    }
		lv_operador_2_0=ruleoperacion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAsignacionComplejaRule());
	        }
       		set(
       			$current, 
       			"operador",
        		lv_operador_2_0, 
        		"operacion");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEscribir
entryRuleEscribir returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEscribirRule()); }
	 iv_ruleEscribir=ruleEscribir 
	 { $current=$iv_ruleEscribir.current; } 
	 EOF 
;

// Rule Escribir
ruleEscribir returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='write' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEscribirAccess().getWriteKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEscribirAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEscribirAccess().getOperadorPrimariaParserRuleCall_2_0()); 
	    }
		lv_operador_2_0=rulePrimaria		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEscribirRule());
	        }
       		add(
       			$current, 
       			"operador",
        		lv_operador_2_0, 
        		"Primaria");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEscribirAccess().getCommaKeyword_3_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEscribirAccess().getOperadorPrimariaParserRuleCall_3_0_1_0()); 
	    }
		lv_operador_4_0=rulePrimaria		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEscribirRule());
	        }
       		add(
       			$current, 
       			"operador",
        		lv_operador_4_0, 
        		"Primaria");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEscribirAccess().getOperadorOperacionParserRuleCall_3_1_0()); 
	    }
		lv_operador_5_0=ruleoperacion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEscribirRule());
	        }
       		add(
       			$current, 
       			"operador",
        		lv_operador_5_0, 
        		"operacion");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEscribirAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleLeer
entryRuleLeer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLeerRule()); }
	 iv_ruleLeer=ruleLeer 
	 { $current=$iv_ruleLeer.current; } 
	 EOF 
;

// Rule Leer
ruleLeer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='read' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLeerAccess().getReadKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLeerAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLeerAccess().getVariablePrimariaParserRuleCall_2_0()); 
	    }
		lv_variable_2_0=rulePrimaria		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLeerRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_2_0, 
        		"Primaria");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLeerAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleSi
entryRuleSi returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSiRule()); }
	 iv_ruleSi=ruleSi 
	 { $current=$iv_ruleSi.current; } 
	 EOF 
;

// Rule Si
ruleSi returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='if' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSiAccess().getIfKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSiAccess().getValorOperacionParserRuleCall_1_0()); 
	    }
		lv_valor_1_0=ruleoperacion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSiRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_1_0, 
        		"operacion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='then' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSiAccess().getThenKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSiAccess().getSentenciasSentenciasParserRuleCall_3_0_0()); 
	    }
		lv_sentencias_3_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSiRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_3_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSiAccess().getSentenciasSentenciasParserRuleCall_3_1_0()); 
	    }
		lv_sentencias_4_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSiRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_4_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSiAccess().getDevuelveDevolverParserRuleCall_4_0()); 
	    }
		lv_devuelve_5_0=ruleDevolver		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSiRule());
	        }
       		set(
       			$current, 
       			"devuelve",
        		lv_devuelve_5_0, 
        		"Devolver");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSiAccess().getSinoSinoParserRuleCall_5_0()); 
	    }
		lv_sino_6_0=ruleSino		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSiRule());
	        }
       		set(
       			$current, 
       			"sino",
        		lv_sino_6_0, 
        		"Sino");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_7='end_if' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSiAccess().getEnd_ifKeyword_6());
    }
)
;





// Entry rule entryRulemientras
entryRulemientras returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMientrasRule()); }
	 iv_rulemientras=rulemientras 
	 { $current=$iv_rulemientras.current; } 
	 EOF 
;

// Rule mientras
rulemientras returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='while' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMientrasAccess().getWhileKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMientrasAccess().getValorOperacionParserRuleCall_1_0()); 
	    }
		lv_valor_1_0=ruleoperacion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMientrasRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_1_0, 
        		"operacion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='do' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMientrasAccess().getDoKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getMientrasAccess().getSentenciasSentenciasParserRuleCall_3_0_0()); 
	    }
		lv_sentencias_3_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMientrasRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_3_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMientrasAccess().getSentenciasSentenciasParserRuleCall_3_1_0()); 
	    }
		lv_sentencias_4_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMientrasRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_4_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_5='end_while' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMientrasAccess().getEnd_whileKeyword_4());
    }
)
;





// Entry rule entryRulerepetir
entryRulerepetir returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRepetirRule()); }
	 iv_rulerepetir=rulerepetir 
	 { $current=$iv_rulerepetir.current; } 
	 EOF 
;

// Rule repetir
rulerepetir returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='repeat' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRepetirAccess().getRepeatKeyword_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRepetirAccess().getSentenciasSentenciasParserRuleCall_1_0_0()); 
	    }
		lv_sentencias_1_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRepetirRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_1_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRepetirAccess().getSentenciasSentenciasParserRuleCall_1_1_0()); 
	    }
		lv_sentencias_2_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRepetirRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_2_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_3='until' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRepetirAccess().getUntilKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRepetirAccess().getValorOperacionParserRuleCall_3_0()); 
	    }
		lv_valor_4_0=ruleoperacion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRepetirRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_4_0, 
        		"operacion");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuledesde
entryRuledesde returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesdeRule()); }
	 iv_ruledesde=ruledesde 
	 { $current=$iv_ruledesde.current; } 
	 EOF 
;

// Rule desde
ruledesde returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='for' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDesdeAccess().getForKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesdeAccess().getAsignacionAsignacionNormalParserRuleCall_1_0()); 
	    }
		lv_asignacion_1_0=ruleAsignacionNormal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesdeRule());
	        }
       		set(
       			$current, 
       			"asignacion",
        		lv_asignacion_1_0, 
        		"AsignacionNormal");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='to' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDesdeAccess().getToKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesdeAccess().getValorOperacionParserRuleCall_3_0()); 
	    }
		lv_valor_3_0=ruleoperacion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesdeRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_3_0, 
        		"operacion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='do' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDesdeAccess().getDoKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDesdeAccess().getSentenciasSentenciasParserRuleCall_5_0_0()); 
	    }
		lv_sentencias_5_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesdeRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_5_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDesdeAccess().getSentenciasSentenciasParserRuleCall_5_1_0()); 
	    }
		lv_sentencias_6_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesdeRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_6_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_7='end_for' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDesdeAccess().getEnd_forKeyword_6());
    }
)
;





// Entry rule entryRuleCaso
entryRuleCaso returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCasoRule()); }
	 iv_ruleCaso=ruleCaso 
	 { $current=$iv_ruleCaso.current; } 
	 EOF 
;

// Rule Caso
ruleCaso returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='case' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCasoAccess().getCaseKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCasoAccess().getOperadorPrimariaParserRuleCall_1_0()); 
	    }
		lv_operador_1_0=rulePrimaria		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCasoRule());
	        }
       		set(
       			$current, 
       			"operador",
        		lv_operador_1_0, 
        		"Primaria");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=': ' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCasoAccess().getColonSpaceKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCasoAccess().getSentenciasSentenciasParserRuleCall_3_0_0()); 
	    }
		lv_sentencias_3_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCasoRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_3_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCasoAccess().getSentenciasSentenciasParserRuleCall_3_1_0()); 
	    }
		lv_sentencias_4_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCasoRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_4_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCasoAccess().getDevuelveDevolverParserRuleCall_4_0()); 
	    }
		lv_devuelve_5_0=ruleDevolver		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCasoRule());
	        }
       		set(
       			$current, 
       			"devuelve",
        		lv_devuelve_5_0, 
        		"Devolver");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRulesegun
entryRulesegun returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSegunRule()); }
	 iv_rulesegun=rulesegun 
	 { $current=$iv_rulesegun.current; } 
	 EOF 
;

// Rule segun
rulesegun returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='according_to' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSegunAccess().getAccording_toKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSegunAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSegunAccess().getValorPrimariaParserRuleCall_2_0()); 
	    }
		lv_valor_2_0=rulePrimaria		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSegunRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_2_0, 
        		"Primaria");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSegunAccess().getRightParenthesisKeyword_3());
    }
	otherlv_4='do' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSegunAccess().getDoKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSegunAccess().getCasoCasoParserRuleCall_5_0_0()); 
	    }
		lv_caso_5_0=ruleCaso		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSegunRule());
	        }
       		add(
       			$current, 
       			"caso",
        		lv_caso_5_0, 
        		"Caso");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSegunAccess().getCasoCasoParserRuleCall_5_1_0()); 
	    }
		lv_caso_6_0=ruleCaso		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSegunRule());
	        }
       		add(
       			$current, 
       			"caso",
        		lv_caso_6_0, 
        		"Caso");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_7='otherwise:' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSegunAccess().getOtherwiseKeyword_6());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSegunAccess().getSentenciasSentenciasParserRuleCall_7_0_0()); 
	    }
		lv_sentencias_8_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSegunRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_8_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSegunAccess().getSentenciasSentenciasParserRuleCall_7_1_0()); 
	    }
		lv_sentencias_9_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSegunRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_9_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSegunAccess().getDevuelveDevolverParserRuleCall_8_0()); 
	    }
		lv_devuelve_10_0=ruleDevolver		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSegunRule());
	        }
       		set(
       			$current, 
       			"devuelve",
        		lv_devuelve_10_0, 
        		"Devolver");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_11='end_according_to' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSegunAccess().getEnd_according_toKeyword_9());
    }
)
;





// Entry rule entryRuleTipoVariable
entryRuleTipoVariable returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTipoVariableRule()); } 
	 iv_ruleTipoVariable=ruleTipoVariable 
	 { $current=$iv_ruleTipoVariable.current.getText(); }  
	 EOF 
;

// Rule TipoVariable
ruleTipoVariable returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='integer' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTipoVariableAccess().getIntegerKeyword_0()); 
    }

    |
	kw='character' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTipoVariableAccess().getCharacterKeyword_1()); 
    }

    |
	kw='real' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTipoVariableAccess().getRealKeyword_2()); 
    }

    |
	kw='boolean' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTipoVariableAccess().getBooleanKeyword_3()); 
    }

    |
	kw='string' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTipoVariableAccess().getStringKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	 iv_ruleVariable=ruleVariable 
	 { $current=$iv_ruleVariable.current; } 
	 EOF 
;

// Rule Variable
ruleVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariableAccess().getVariableAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAccess().getNombreEStringParserRuleCall_1_0()); 
	    }
		lv_nombre_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulebooleano
entryRulebooleano returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanoRule()); } 
	 iv_rulebooleano=rulebooleano 
	 { $current=$iv_rulebooleano.current.getText(); }  
	 EOF 
;

// Rule booleano
rulebooleano returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='true' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBooleanoAccess().getTrueKeyword_0()); 
    }

    |
	kw='false' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBooleanoAccess().getFalseKeyword_1()); 
    }
)
    ;







// Entry rule entryRulesignoOr
entryRulesignoOr returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignoOrRule()); } 
	 iv_rulesignoOr=rulesignoOr 
	 { $current=$iv_rulesignoOr.current.getText(); }  
	 EOF 
;

// Rule signoOr
rulesignoOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='or' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoOrAccess().getOrKeyword()); 
    }

    ;





// Entry rule entryRulesignoAnd
entryRulesignoAnd returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignoAndRule()); } 
	 iv_rulesignoAnd=rulesignoAnd 
	 { $current=$iv_rulesignoAnd.current.getText(); }  
	 EOF 
;

// Rule signoAnd
rulesignoAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='and' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoAndAccess().getAndKeyword()); 
    }

    ;





// Entry rule entryRulesignoIgualdad
entryRulesignoIgualdad returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignoIgualdadRule()); } 
	 iv_rulesignoIgualdad=rulesignoIgualdad 
	 { $current=$iv_rulesignoIgualdad.current.getText(); }  
	 EOF 
;

// Rule signoIgualdad
rulesignoIgualdad returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoIgualdadAccess().getEqualsSignEqualsSignKeyword_0()); 
    }

    |
	kw='!=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoIgualdadAccess().getExclamationMarkEqualsSignKeyword_1()); 
    }
)
    ;





// Entry rule entryRulesignoComparacion
entryRulesignoComparacion returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignoComparacionRule()); } 
	 iv_rulesignoComparacion=rulesignoComparacion 
	 { $current=$iv_rulesignoComparacion.current.getText(); }  
	 EOF 
;

// Rule signoComparacion
rulesignoComparacion returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoComparacionAccess().getLessThanSignKeyword_0()); 
    }

    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoComparacionAccess().getGreaterThanSignKeyword_1()); 
    }

    |
	kw='>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoComparacionAccess().getGreaterThanSignEqualsSignKeyword_2()); 
    }

    |
	kw='<=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoComparacionAccess().getLessThanSignEqualsSignKeyword_3()); 
    }
)
    ;





// Entry rule entryRulesignoSuma
entryRulesignoSuma returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignoSumaRule()); } 
	 iv_rulesignoSuma=rulesignoSuma 
	 { $current=$iv_rulesignoSuma.current.getText(); }  
	 EOF 
;

// Rule signoSuma
rulesignoSuma returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoSumaAccess().getPlusSignKeyword()); 
    }

    ;





// Entry rule entryRulesignoResta
entryRulesignoResta returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignoRestaRule()); } 
	 iv_rulesignoResta=rulesignoResta 
	 { $current=$iv_rulesignoResta.current.getText(); }  
	 EOF 
;

// Rule signoResta
rulesignoResta returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoRestaAccess().getHyphenMinusKeyword()); 
    }

    ;





// Entry rule entryRulesignoMultiplicacion
entryRulesignoMultiplicacion returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignoMultiplicacionRule()); } 
	 iv_rulesignoMultiplicacion=rulesignoMultiplicacion 
	 { $current=$iv_rulesignoMultiplicacion.current.getText(); }  
	 EOF 
;

// Rule signoMultiplicacion
rulesignoMultiplicacion returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoMultiplicacionAccess().getAsteriskKeyword()); 
    }

    ;





// Entry rule entryRulesignoDivision
entryRulesignoDivision returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignoDivisionRule()); } 
	 iv_rulesignoDivision=rulesignoDivision 
	 { $current=$iv_rulesignoDivision.current.getText(); }  
	 EOF 
;

// Rule signoDivision
rulesignoDivision returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoDivisionAccess().getSolidusKeyword()); 
    }

    ;





// Entry rule entryRuleoperacion
entryRuleoperacion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperacionRule()); }
	 iv_ruleoperacion=ruleoperacion 
	 { $current=$iv_ruleoperacion.current; } 
	 EOF 
;

// Rule operacion
ruleoperacion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getOperacionAccess().getOrParserRuleCall()); 
    }
    this_Or_0=ruleOr
    { 
        $current = $this_Or_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleOr
entryRuleOr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrRule()); }
	 iv_ruleOr=ruleOr 
	 { $current=$iv_ruleOr.current; } 
	 EOF 
;

// Rule Or
ruleOr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOrAccess().getAndParserRuleCall_0()); 
    }
    this_And_0=ruleAnd
    { 
        $current = $this_And_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getOrAccess().getOrLeftAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOrAccess().getSigno_opSignoOrParserRuleCall_1_1_0()); 
	    }
		lv_signo_op_2_0=rulesignoOr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrRule());
	        }
       		set(
       			$current, 
       			"signo_op",
        		lv_signo_op_2_0, 
        		"signoOr");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleAnd		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"And");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAnd
entryRuleAnd returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAndRule()); }
	 iv_ruleAnd=ruleAnd 
	 { $current=$iv_ruleAnd.current; } 
	 EOF 
;

// Rule And
ruleAnd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAndAccess().getIgualdadParserRuleCall_0()); 
    }
    this_Igualdad_0=ruleIgualdad
    { 
        $current = $this_Igualdad_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAndAccess().getAndLeftAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAndAccess().getSigno_opSignoAndParserRuleCall_1_1_0()); 
	    }
		lv_signo_op_2_0=rulesignoAnd		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAndRule());
	        }
       		set(
       			$current, 
       			"signo_op",
        		lv_signo_op_2_0, 
        		"signoAnd");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAndAccess().getRightIgualdadParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleIgualdad		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAndRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"Igualdad");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleIgualdad
entryRuleIgualdad returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIgualdadRule()); }
	 iv_ruleIgualdad=ruleIgualdad 
	 { $current=$iv_ruleIgualdad.current; } 
	 EOF 
;

// Rule Igualdad
ruleIgualdad returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIgualdadAccess().getComparacionParserRuleCall_0()); 
    }
    this_Comparacion_0=ruleComparacion
    { 
        $current = $this_Comparacion_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getIgualdadAccess().getIgualdadLeftAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIgualdadAccess().getSigno_opSignoIgualdadParserRuleCall_1_1_0()); 
	    }
		lv_signo_op_2_0=rulesignoIgualdad		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIgualdadRule());
	        }
       		set(
       			$current, 
       			"signo_op",
        		lv_signo_op_2_0, 
        		"signoIgualdad");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIgualdadAccess().getRightComparacionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleComparacion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIgualdadRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"Comparacion");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleComparacion
entryRuleComparacion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComparacionRule()); }
	 iv_ruleComparacion=ruleComparacion 
	 { $current=$iv_ruleComparacion.current; } 
	 EOF 
;

// Rule Comparacion
ruleComparacion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getComparacionAccess().getSumaRestaParserRuleCall_0()); 
    }
    this_SumaResta_0=ruleSumaResta
    { 
        $current = $this_SumaResta_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getComparacionAccess().getComparacionLeftAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getComparacionAccess().getSigno_opSignoComparacionParserRuleCall_1_1_0()); 
	    }
		lv_signo_op_2_0=rulesignoComparacion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComparacionRule());
	        }
       		set(
       			$current, 
       			"signo_op",
        		lv_signo_op_2_0, 
        		"signoComparacion");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getComparacionAccess().getRightSumaRestaParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleSumaResta		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComparacionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"SumaResta");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleSumaResta
entryRuleSumaResta returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSumaRestaRule()); }
	 iv_ruleSumaResta=ruleSumaResta 
	 { $current=$iv_ruleSumaResta.current; } 
	 EOF 
;

// Rule SumaResta
ruleSumaResta returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSumaRestaAccess().getMultiplicacionDivisionParserRuleCall_0()); 
    }
    this_MultiplicacionDivision_0=ruleMultiplicacionDivision
    { 
        $current = $this_MultiplicacionDivision_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSumaRestaAccess().getSumaLeftAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSumaRestaAccess().getSigno_opSignoSumaParserRuleCall_1_0_0_1_0()); 
	    }
		lv_signo_op_2_0=rulesignoSuma		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSumaRestaRule());
	        }
       		set(
       			$current, 
       			"signo_op",
        		lv_signo_op_2_0, 
        		"signoSuma");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSumaRestaAccess().getRestaLeftAction_1_0_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSumaRestaAccess().getSigno_opSignoRestaParserRuleCall_1_0_1_1_0()); 
	    }
		lv_signo_op_4_0=rulesignoResta		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSumaRestaRule());
	        }
       		set(
       			$current, 
       			"signo_op",
        		lv_signo_op_4_0, 
        		"signoResta");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getSumaRestaAccess().getRightMultiplicacionDivisionParserRuleCall_1_1_0()); 
	    }
		lv_right_5_0=ruleMultiplicacionDivision		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSumaRestaRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"MultiplicacionDivision");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleMultiplicacionDivision
entryRuleMultiplicacionDivision returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiplicacionDivisionRule()); }
	 iv_ruleMultiplicacionDivision=ruleMultiplicacionDivision 
	 { $current=$iv_ruleMultiplicacionDivision.current; } 
	 EOF 
;

// Rule MultiplicacionDivision
ruleMultiplicacionDivision returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMultiplicacionDivisionAccess().getPrimariaParserRuleCall_0()); 
    }
    this_Primaria_0=rulePrimaria
    { 
        $current = $this_Primaria_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMultiplicacionDivisionAccess().getMultiplicacionLeftAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicacionDivisionAccess().getSigno_opSignoMultiplicacionParserRuleCall_1_0_0_1_0()); 
	    }
		lv_signo_op_2_0=rulesignoMultiplicacion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicacionDivisionRule());
	        }
       		set(
       			$current, 
       			"signo_op",
        		lv_signo_op_2_0, 
        		"signoMultiplicacion");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMultiplicacionDivisionAccess().getDivisionLeftAction_1_0_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicacionDivisionAccess().getSigno_opSignoDivisionParserRuleCall_1_0_1_1_0()); 
	    }
		lv_signo_op_4_0=rulesignoDivision		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicacionDivisionRule());
	        }
       		set(
       			$current, 
       			"signo_op",
        		lv_signo_op_4_0, 
        		"signoDivision");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicacionDivisionAccess().getRightPrimariaParserRuleCall_1_1_0()); 
	    }
		lv_right_5_0=rulePrimaria		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicacionDivisionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"Primaria");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulePrimaria
entryRulePrimaria returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimariaRule()); }
	 iv_rulePrimaria=rulePrimaria 
	 { $current=$iv_rulePrimaria.current; } 
	 EOF 
;

// Rule Primaria
rulePrimaria returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='|' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPrimariaAccess().getVerticalLineKeyword_0_0());
    }

    { 
        newCompositeNode(grammarAccess.getPrimariaAccess().getOperacionParserRuleCall_0_1()); 
    }
    this_operacion_1=ruleoperacion
    { 
        $current = $this_operacion_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='|' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPrimariaAccess().getVerticalLineKeyword_0_2());
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getPrimariaAccess().getVariablesBasicasParserRuleCall_1()); 
    }
    this_VariablesBasicas_3=ruleVariablesBasicas
    { 
        $current = $this_VariablesBasicas_3.current; 
        afterParserOrEnumRuleCall();
    }

    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimariaAccess().getNegativaAction_2_0(),
            $current);
    }
)	otherlv_5='-(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPrimariaAccess().getHyphenMinusLeftParenthesisKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimariaAccess().getValor_operacionOperacionParserRuleCall_2_2_0()); 
	    }
		lv_valor_operacion_6_0=ruleoperacion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimariaRule());
	        }
       		set(
       			$current, 
       			"valor_operacion",
        		lv_valor_operacion_6_0, 
        		"operacion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPrimariaAccess().getRightParenthesisKeyword_2_3());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimariaAccess().getNegacionAction_3_0(),
            $current);
    }
)	otherlv_9='not' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getPrimariaAccess().getNotKeyword_3_1());
    }
	otherlv_10='(' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getPrimariaAccess().getLeftParenthesisKeyword_3_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimariaAccess().getValor_operacionOperacionParserRuleCall_3_3_0()); 
	    }
		lv_valor_operacion_11_0=ruleoperacion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimariaRule());
	        }
       		set(
       			$current, 
       			"valor_operacion",
        		lv_valor_operacion_11_0, 
        		"operacion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12=')' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getPrimariaAccess().getRightParenthesisKeyword_3_4());
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getPrimariaAccess().getFuncionesParserRuleCall_4()); 
    }
    this_Funciones_13=ruleFunciones
    { 
        $current = $this_Funciones_13.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimariaAccess().getVariablesComplejasParserRuleCall_5()); 
    }
    this_VariablesComplejas_14=ruleVariablesComplejas
    { 
        $current = $this_VariablesComplejas_14.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFunciones
entryRuleFunciones returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFuncionesRule()); }
	 iv_ruleFunciones=ruleFunciones 
	 { $current=$iv_ruleFunciones.current; } 
	 EOF 
;

// Rule Funciones
ruleFunciones returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFuncionesAccess().getLlamadaFuncionAction_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionesAccess().getNombreEStringParserRuleCall_0_1_0()); 
	    }
		lv_nombre_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionesRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFuncionesAccess().getLeftParenthesisKeyword_0_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionesAccess().getOperadoresOperacionParserRuleCall_0_3_0_0()); 
	    }
		lv_operadores_3_0=ruleoperacion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionesRule());
	        }
       		add(
       			$current, 
       			"operadores",
        		lv_operadores_3_0, 
        		"operacion");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFuncionesAccess().getCommaKeyword_0_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionesAccess().getOperadoresOperacionParserRuleCall_0_3_1_1_0()); 
	    }
		lv_operadores_5_0=ruleoperacion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionesRule());
	        }
       		add(
       			$current, 
       			"operadores",
        		lv_operadores_5_0, 
        		"operacion");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFuncionesAccess().getRightParenthesisKeyword_0_4());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFuncionesAccess().getInternasAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionesAccess().getNombreNombreInternaParserRuleCall_1_1_0()); 
	    }
		lv_nombre_8_0=ruleNombreInterna		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionesRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_8_0, 
        		"NombreInterna");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9='(' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getFuncionesAccess().getLeftParenthesisKeyword_1_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionesAccess().getOperadoresOperacionParserRuleCall_1_3_0_0()); 
	    }
		lv_operadores_10_0=ruleoperacion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionesRule());
	        }
       		add(
       			$current, 
       			"operadores",
        		lv_operadores_10_0, 
        		"operacion");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getFuncionesAccess().getCommaKeyword_1_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionesAccess().getOperadoresOperacionParserRuleCall_1_3_1_1_0()); 
	    }
		lv_operadores_12_0=ruleoperacion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionesRule());
	        }
       		add(
       			$current, 
       			"operadores",
        		lv_operadores_12_0, 
        		"operacion");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getFuncionesAccess().getRightParenthesisKeyword_1_4());
    }
))
;





// Entry rule entryRuleVariablesComplejas
entryRuleVariablesComplejas returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariablesComplejasRule()); }
	 iv_ruleVariablesComplejas=ruleVariablesComplejas 
	 { $current=$iv_ruleVariablesComplejas.current; } 
	 EOF 
;

// Rule VariablesComplejas
ruleVariablesComplejas returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariablesComplejasAccess().getValorVectorAction_0_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getVariablesComplejasAccess().getNombre_vectorEStringParserRuleCall_0_1_0_0()); 
	    }
		lv_nombre_vector_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariablesComplejasRule());
	        }
       		set(
       			$current, 
       			"nombre_vector",
        		lv_nombre_vector_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVariablesComplejasAccess().getLeftSquareBracketKeyword_0_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariablesComplejasAccess().getIndiceVariablesBasicasParserRuleCall_0_1_2_0()); 
	    }
		lv_indice_3_0=ruleVariablesBasicas		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariablesComplejasRule());
	        }
       		set(
       			$current, 
       			"indice",
        		lv_indice_3_0, 
        		"VariablesBasicas");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVariablesComplejasAccess().getRightSquareBracketKeyword_0_1_3());
    }
)(	otherlv_5='.' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVariablesComplejasAccess().getFullStopKeyword_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariablesComplejasAccess().getCampoCampoRegistroParserRuleCall_0_2_1_0()); 
	    }
		lv_campo_6_0=ruleCampoRegistro		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariablesComplejasRule());
	        }
       		add(
       			$current, 
       			"campo",
        		lv_campo_6_0, 
        		"CampoRegistro");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariablesComplejasAccess().getValorMatrizAction_1_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getVariablesComplejasAccess().getNombre_matrizEStringParserRuleCall_1_1_0_0()); 
	    }
		lv_nombre_matriz_8_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariablesComplejasRule());
	        }
       		set(
       			$current, 
       			"nombre_matriz",
        		lv_nombre_matriz_8_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9='[' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getVariablesComplejasAccess().getLeftSquareBracketKeyword_1_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariablesComplejasAccess().getPrimerIndiceVariablesBasicasParserRuleCall_1_1_2_0()); 
	    }
		lv_primerIndice_10_0=ruleVariablesBasicas		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariablesComplejasRule());
	        }
       		set(
       			$current, 
       			"primerIndice",
        		lv_primerIndice_10_0, 
        		"VariablesBasicas");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='][' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getVariablesComplejasAccess().getRightSquareBracketLeftSquareBracketKeyword_1_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariablesComplejasAccess().getSegundoIndiceVariablesBasicasParserRuleCall_1_1_4_0()); 
	    }
		lv_segundoIndice_12_0=ruleVariablesBasicas		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariablesComplejasRule());
	        }
       		set(
       			$current, 
       			"segundoIndice",
        		lv_segundoIndice_12_0, 
        		"VariablesBasicas");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=']' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getVariablesComplejasAccess().getRightSquareBracketKeyword_1_1_5());
    }
)(	otherlv_14='.' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getVariablesComplejasAccess().getFullStopKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariablesComplejasAccess().getCampoCampoRegistroParserRuleCall_1_2_1_0()); 
	    }
		lv_campo_15_0=ruleCampoRegistro		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariablesComplejasRule());
	        }
       		add(
       			$current, 
       			"campo",
        		lv_campo_15_0, 
        		"CampoRegistro");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariablesComplejasAccess().getValorRegistroAction_2_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariablesComplejasAccess().getNombre_registroEStringParserRuleCall_2_1_0()); 
	    }
		lv_nombre_registro_17_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariablesComplejasRule());
	        }
       		set(
       			$current, 
       			"nombre_registro",
        		lv_nombre_registro_17_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_18='.' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getVariablesComplejasAccess().getFullStopKeyword_2_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getVariablesComplejasAccess().getCampoCampoRegistroParserRuleCall_2_3_0_0()); 
	    }
		lv_campo_19_0=ruleCampoRegistro		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariablesComplejasRule());
	        }
       		add(
       			$current, 
       			"campo",
        		lv_campo_19_0, 
        		"CampoRegistro");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_20='.' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getVariablesComplejasAccess().getFullStopKeyword_2_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariablesComplejasAccess().getCampoCampoRegistroParserRuleCall_2_3_1_1_0()); 
	    }
		lv_campo_21_0=ruleCampoRegistro		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariablesComplejasRule());
	        }
       		add(
       			$current, 
       			"campo",
        		lv_campo_21_0, 
        		"CampoRegistro");
	        afterParserOrEnumRuleCall();
	    }

)
))*)))
;





// Entry rule entryRuleVariablesBasicas
entryRuleVariablesBasicas returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariablesBasicasRule()); }
	 iv_ruleVariablesBasicas=ruleVariablesBasicas 
	 { $current=$iv_ruleVariablesBasicas.current; } 
	 EOF 
;

// Rule VariablesBasicas
ruleVariablesBasicas returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariablesBasicasAccess().getNumeroEnteroAction_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariablesBasicasAccess().getValorEIntParserRuleCall_0_1_0()); 
	    }
		lv_valor_1_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariablesBasicasRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_1_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariablesBasicasAccess().getNumeroDecimalAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariablesBasicasAccess().getValorEFloatParserRuleCall_1_1_0()); 
	    }
		lv_valor_3_0=ruleEFloat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariablesBasicasRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_3_0, 
        		"EFloat");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariablesBasicasAccess().getConstCadenaAction_2_0(),
            $current);
    }
)(
(
		lv_contenido_5_0=RULE_CAD
		{
			newLeafNode(lv_contenido_5_0, grammarAccess.getVariablesBasicasAccess().getContenidoCADTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariablesBasicasRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"contenido",
        		lv_contenido_5_0, 
        		"CAD");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariablesBasicasAccess().getCaracterAction_3_0(),
            $current);
    }
)(
(
		lv_contenido_7_0=RULE_CAR
		{
			newLeafNode(lv_contenido_7_0, grammarAccess.getVariablesBasicasAccess().getContenidoCARTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariablesBasicasRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"contenido",
        		lv_contenido_7_0, 
        		"CAR");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariablesBasicasAccess().getValorBooleanoAction_4_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariablesBasicasAccess().getValorBooleanoParserRuleCall_4_1_0()); 
	    }
		lv_valor_9_0=rulebooleano		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariablesBasicasRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_9_0, 
        		"booleano");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariablesBasicasAccess().getVariableIDAction_5_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariablesBasicasAccess().getNombreEStringParserRuleCall_5_1_0()); 
	    }
		lv_nombre_11_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariablesBasicasRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_11_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleSino
entryRuleSino returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSinoRule()); }
	 iv_ruleSino=ruleSino 
	 { $current=$iv_ruleSino.current; } 
	 EOF 
;

// Rule Sino
ruleSino returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSinoAccess().getSinoAction_0(),
            $current);
    }
)	otherlv_1='else' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSinoAccess().getElseKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSinoAccess().getSentenciasSentenciasParserRuleCall_2_0_0()); 
	    }
		lv_sentencias_2_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSinoRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_2_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSinoAccess().getSentenciasSentenciasParserRuleCall_2_1_0()); 
	    }
		lv_sentencias_3_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSinoRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_3_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSinoAccess().getDevuelveDevolverParserRuleCall_3_0()); 
	    }
		lv_devuelve_4_0=ruleDevolver		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSinoRule());
	        }
       		set(
       			$current, 
       			"devuelve",
        		lv_devuelve_4_0, 
        		"Devolver");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleDevolver
entryRuleDevolver returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDevolverRule()); }
	 iv_ruleDevolver=ruleDevolver 
	 { $current=$iv_ruleDevolver.current; } 
	 EOF 
;

// Rule Devolver
ruleDevolver returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDevolverAccess().getDevolverAction_0(),
            $current);
    }
)	otherlv_1='return' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDevolverAccess().getReturnKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDevolverAccess().getDevuelvePrimariaParserRuleCall_2_0()); 
	    }
		lv_devuelve_2_0=rulePrimaria		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDevolverRule());
	        }
       		set(
       			$current, 
       			"devuelve",
        		lv_devuelve_2_0, 
        		"Primaria");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleParametroFuncion
entryRuleParametroFuncion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParametroFuncionRule()); }
	 iv_ruleParametroFuncion=ruleParametroFuncion 
	 { $current=$iv_ruleParametroFuncion.current; } 
	 EOF 
;

// Rule ParametroFuncion
ruleParametroFuncion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getParametroFuncionAccess().getPasoTipoPasoParserRuleCall_0_0()); 
	    }
		lv_paso_0_0=ruleTipoPaso		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParametroFuncionRule());
	        }
       		set(
       			$current, 
       			"paso",
        		lv_paso_0_0, 
        		"TipoPaso");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getParametroFuncionAccess().getTipoTipoParserRuleCall_1_0()); 
	    }
		lv_tipo_1_0=ruleTipo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParametroFuncionRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_1_0, 
        		"Tipo");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=': ' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getParametroFuncionAccess().getColonSpaceKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParametroFuncionAccess().getVariableVariableParserRuleCall_3_0()); 
	    }
		lv_variable_3_0=ruleVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParametroFuncionRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_3_0, 
        		"Variable");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFuncion
entryRuleFuncion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFuncionRule()); }
	 iv_ruleFuncion=ruleFuncion 
	 { $current=$iv_ruleFuncion.current; } 
	 EOF 
;

// Rule Funcion
ruleFuncion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getTipoTipoVariableParserRuleCall_0_0()); 
	    }
		lv_tipo_0_0=ruleTipoVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_0_0, 
        		"TipoVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='function' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFuncionAccess().getFunctionKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getNombreEStringParserRuleCall_2_0()); 
	    }
		lv_nombre_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFuncionAccess().getLeftParenthesisKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getParametrofuncionParametroFuncionParserRuleCall_4_0_0()); 
	    }
		lv_parametrofuncion_4_0=ruleParametroFuncion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		add(
       			$current, 
       			"parametrofuncion",
        		lv_parametrofuncion_4_0, 
        		"ParametroFuncion");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFuncionAccess().getCommaKeyword_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getParametrofuncionParametroFuncionParserRuleCall_4_1_1_0()); 
	    }
		lv_parametrofuncion_6_0=ruleParametroFuncion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		add(
       			$current, 
       			"parametrofuncion",
        		lv_parametrofuncion_6_0, 
        		"ParametroFuncion");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFuncionAccess().getRightParenthesisKeyword_5());
    }
(	otherlv_8='const' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getFuncionAccess().getConstKeyword_6());
    }
)?(	otherlv_9='type' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getFuncionAccess().getTypeKeyword_7());
    }
)?	otherlv_10='var' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getFuncionAccess().getVarKeyword_8());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getDeclaracionDeclaracionParserRuleCall_9_0_0()); 
	    }
		lv_declaracion_11_0=ruleDeclaracion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		add(
       			$current, 
       			"declaracion",
        		lv_declaracion_11_0, 
        		"Declaracion");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getDeclaracionDeclaracionParserRuleCall_9_1_0()); 
	    }
		lv_declaracion_12_0=ruleDeclaracion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		add(
       			$current, 
       			"declaracion",
        		lv_declaracion_12_0, 
        		"Declaracion");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_13='initiation' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getFuncionAccess().getInitiationKeyword_10());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getSentenciasSentenciasParserRuleCall_11_0_0()); 
	    }
		lv_sentencias_14_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_14_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getSentenciasSentenciasParserRuleCall_11_1_0()); 
	    }
		lv_sentencias_15_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_15_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getDevuelveDevolverParserRuleCall_12_0()); 
	    }
		lv_devuelve_16_0=ruleDevolver		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		set(
       			$current, 
       			"devuelve",
        		lv_devuelve_16_0, 
        		"Devolver");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_17='end_initiation' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getFuncionAccess().getEnd_initiationKeyword_13());
    }
	otherlv_18='end_function' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getFuncionAccess().getEnd_functionKeyword_14());
    }
)
;





// Entry rule entryRuleProcedimiento
entryRuleProcedimiento returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProcedimientoRule()); }
	 iv_ruleProcedimiento=ruleProcedimiento 
	 { $current=$iv_ruleProcedimiento.current; } 
	 EOF 
;

// Rule Procedimiento
ruleProcedimiento returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='procedure' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProcedimientoAccess().getProcedureKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcedimientoAccess().getNombreEStringParserRuleCall_1_0()); 
	    }
		lv_nombre_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedimientoRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getProcedimientoAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getProcedimientoAccess().getParametrofuncionParametroFuncionParserRuleCall_3_0_0()); 
	    }
		lv_parametrofuncion_3_0=ruleParametroFuncion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedimientoRule());
	        }
       		add(
       			$current, 
       			"parametrofuncion",
        		lv_parametrofuncion_3_0, 
        		"ParametroFuncion");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getProcedimientoAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcedimientoAccess().getParametrofuncionParametroFuncionParserRuleCall_3_1_1_0()); 
	    }
		lv_parametrofuncion_5_0=ruleParametroFuncion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedimientoRule());
	        }
       		add(
       			$current, 
       			"parametrofuncion",
        		lv_parametrofuncion_5_0, 
        		"ParametroFuncion");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getProcedimientoAccess().getRightParenthesisKeyword_4());
    }
(	otherlv_7='const' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getProcedimientoAccess().getConstKeyword_5());
    }
)?(	otherlv_8='type' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getProcedimientoAccess().getTypeKeyword_6());
    }
)?	otherlv_9='var' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getProcedimientoAccess().getVarKeyword_7());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getProcedimientoAccess().getDeclaracionDeclaracionParserRuleCall_8_0_0()); 
	    }
		lv_declaracion_10_0=ruleDeclaracion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedimientoRule());
	        }
       		add(
       			$current, 
       			"declaracion",
        		lv_declaracion_10_0, 
        		"Declaracion");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getProcedimientoAccess().getDeclaracionDeclaracionParserRuleCall_8_1_0()); 
	    }
		lv_declaracion_11_0=ruleDeclaracion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedimientoRule());
	        }
       		add(
       			$current, 
       			"declaracion",
        		lv_declaracion_11_0, 
        		"Declaracion");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_12='initiation' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getProcedimientoAccess().getInitiationKeyword_9());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getProcedimientoAccess().getSentenciasSentenciasParserRuleCall_10_0_0()); 
	    }
		lv_sentencias_13_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedimientoRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_13_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getProcedimientoAccess().getSentenciasSentenciasParserRuleCall_10_1_0()); 
	    }
		lv_sentencias_14_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedimientoRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_14_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_15='end_initiation' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getProcedimientoAccess().getEnd_initiationKeyword_11());
    }
	otherlv_16='end_procedure' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getProcedimientoAccess().getEnd_procedureKeyword_12());
    }
)
;





// Entry rule entryRuleTipoPaso
entryRuleTipoPaso returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTipoPasoRule()); } 
	 iv_ruleTipoPaso=ruleTipoPaso 
	 { $current=$iv_ruleTipoPaso.current.getText(); }  
	 EOF 
;

// Rule TipoPaso
ruleTipoPaso returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='E' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTipoPasoAccess().getEKeyword_0()); 
    }

    |
	kw='E/S' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTipoPasoAccess().getESKeyword_1()); 
    }

    |
	kw='S' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTipoPasoAccess().getSKeyword_2()); 
    }
)
    ;





RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_CAD : '"' ('a'..'z'|'A'..'Z'|'_'|' '|'!'|'#'|'@'|'%'|'&'|'('|')'|'='|'?'|'\\'|'0'..'9')* '"';

RULE_CAR : '\'' ('a'..'z'|'A'..'Z'|'_'|' '|'!'|'#'|'@'|'%'|'&'|'('|')'|'='|'?'|'\\'|'0'..'9') '\'';

RULE_COMENT : '/*' ('a'..'z'|'A'..'Z'|'_'|' '|'!'|'#'|'@'|'%'|'&'|'('|')'|'='|'?'|'\\'|'0'..'9')* '*/';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


